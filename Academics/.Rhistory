mat2
dimnames(mat2) <- list(c(rownames(mat2)[-2],"R7"))
mat2
dimnames(mat2) <- list(c(rownames(mat2)[-3],"R7"))
mat2
dimnames(mat2) <- list(c(rownames(mat2)[-4],"R7"))
mat2
rownames(mat2) <- c("r1","row2","row3","r4","r5","r6","row7");
mat2
dimnames(mat2) <- list(c(rownames(mat2)[5:7],"ROWS"))
dimnames(mat2) <- list(c(rownames(mat2)[-5],"ROWS"))
mat2
m1 <- rbind(2.0,3.,90)
m1
m1 <- rbind(c(2.0,3.,90))
m1
m1 <- cbind(c(10,20,30))
m1
m1 <- rbind (10,20, 30), cbind(40,30,60)
m1 <- (rbind(c(10,20,30)), cbind(c(40,30,60)))
m1 <- (rbind(c(10,20,30), c(40,50))
m1
m1 <- (rbind(c(10,20,30), c(40,50)))
m1 <- (rbind(c(10,20,30), c(40,50,70)))
m1
m1 <- (rbind(c(10,20,30), c(40,50)))
m1
m1 <- (rbind(c(10,20,30), c(40,50,70)))
m1
m1 <- (rbind(c(10,20,30), c(40,50)))
m1
array(1:10)
c <- (1:10)
c
array(1:10, dim=2)
array(1:10, dim=5)
array(1:10, dim=100)
c <- (1:10, dim = 100)
c <- (1:10)
c <- (1:100)
c
# assigning null value to matrix
(mat5 <- (matrix( nrow = 3, ncol = 3, byrow = TRUE,)))
(m1 <- matrix(1:10,ncol = 2, nrow = 5))
(m2 <- matrix(21:30,ncol = 2, nrow = 5))
m1-m2
(m2 <- matrix(21:30,ncol = 2, nrow = 5, byrow = TRUE))
m1-m2
(m2 <- matrix(21:30,ncol = 2, nrow = 5))
m1-m2
(m3 <- matrix(21:30,ncol = 5, nrow = 2))
m3 <- t(m3)
m3
(m3 <- matrix(21:30,ncol = 5, nrow = 2))
m2+m3
(m3 <- matrix(21:30,ncol = 5, nrow = 2))
m3 <- t(m3)
m2+m3
m3
styler:::set_style_transformers()
styler:::set_style_transformers()
m1 \\ m2
m1 // m2
m1 / m2
m1 * m2
(m3 <- matrix(21:30,ncol = 5, nrow = 2))
m1 * m3
(m1 <- matrix(1:10,ncol = 2, nrow = 5))
(m2 <- matrix(21:30,ncol = 2, nrow = 5))
(m3 <- matrix(21:30,ncol = 5, nrow = 2))
m1 * m3
m3 * m1
m1 * m2
m1 * m2
m1% * %m3
m1%*%m3
m1 * m2
m1%*%m2
m1%*%m2
#wrong multi:
m1*m2
rm(c(d, b))
# Print the matrix
print(alphabet_matrix)
alphabet_matrix
rm(a)
(x <- data.frame("SN" = 1:2, "Age" = c(10,20,30,40) "Name" = c("Sai", "rambo", "kumar", "hsk"))
(x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40) "Name" = c("Sai", "rambo", "kumar", "hsk"))
(x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40) "Name" = c("Sai", "rambo", "kumar", "hsk"))
(x <- data.frame("SN" = 1:4 "Age" = c(10,20,30,40) "Name" = c("Sai", "rambo", "kumar", "hsk"))
(x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x
(x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
(x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
typeof(x)
(x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x <- data.frame("SN" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
typeof(x)
x
x
x <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x
x <- data.frame("S_N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x
x <- data.frame(S_N = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x
x <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x
# $ represents .
# . represents pause/break
str(x)
x <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
x
x[2,6]
x[2,3]
x[4]
x[4,]
x[,5]
x[,4]
x[,3]
class(x)
class(x[,3])
class(x[4,])
class(x[2,3])
x[,1]
class(x[,1])
names(x)
age(x)
str(x)
nrow(x)
ncol(x)
typeof(x[1,2])
typeof(x[,1])
len(x)
length(x)
dim(x)
#gives the structure of the data frame
str(x)
x <- data.frame( 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
#gives the structure of the data frame
str(x)
x <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
#gives the structure of the data frame
str(x)
#accesing the rows and the col
x$Name[4]
#accesing the rows and the col
x$Name
#accesing the elements in rows and the col
x$S.N
#accesing the elements in rows and the col
x$S.N[3]
#accesing the elements in rows and the col
x$S.N[1:3]
#accesing the elements in rows and the col
x$S.N[3:3]
x$Age
x$Age[4]
x$Name
x$Name[1]
x$Name[,1]
x$Name[1,]
x$Name[1]
x$Name[]
x$Name['a']
x$Name[]
summary(x)
y <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"), "D1" = c(t,f))
#overiding of data occurs
y <- cbind("platform" = c("pc", "pc", "xbox", "station5"))
y
y <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"), "D1" = c(t,f))
y <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
y
#overiding of data occurs
y <- cbind("platform" = c("pc", "pc", "xbox", "station5"))
y
y
y <- data.frame("S N" = 1:4, "Age" = c(10,20,30,40), "Name" = c("Sai", "rambo", "kumar", "hsk"))
#for non overiding of data we need to :
#first execute again the og value
y <- cbind(y, "platform" = c("pc", "pc", "xbox", "station5"))
y
y <- rbind(y, c(5, 19, "Shadow", "steam"))
y
rm(x, "Shadow")
rm(x, "Name")
data()
data()
airquality
?airquality
base64enc
base64enc()
a <- 5
a
str <- "hello"
str
print(str)
(a1 <- array(data = NA, dim = c(3,4,2)))
(a1 <- array(data = NA, dim = c(3,4,2)))
(a1 <- array(data = NA, dim = c(3,4,2)))
(a1 <- array(data = NA, dim = c(3,4,2)))
(a1 <- array(data = NA, dim = c(3,4,2)))
?array
(a1 <- array(data = NA, dim = c(3,4,2)))
(a1 <- array(data = NA, dim = c(3,4,2)))
?array
#the default dim of a array is 1x26, cuz 26 letters
?as.array
dim (as.array(letters))
letters
LETTERS
(a1 <- array(data = NA, dim = c(3,4,2)))
?array
#the default dim of a array is 1x26, cuz 26 letters
?as.array
dim (as.array(letters))
letters
LETTERS
class(letters)
is.array(letters);
is.array(s);
is.integer(letters);
a1[2,, ];
(a1 <- array(data = 1:15, dim = c(3,3,4)))
a1[2, 4, 4];
a1[, 4,4]
a1[1,,4]
a1[2,4,4]
typeof(a1)
length(a1)
a1[,,4]
a1[1, , 4]
a1[,1,4]
v3 <- c(1,2,3,4)
v4 <- c(6,7,8,9,12,45)
v3+v4
typeof(v3)
class(v3)
(a3 <- array(c(v3, v4), dim=c(3,3,4)))
a3;
#dim is a parameter of array
a1 + a3
#error cuz must be of same size
#addition only takes place, when the arrays of exact same dimensions
dim(a1)
dim(a3)
length(a1)
length(a3)
a1+a3[, 1:2, ]
a1+a3
a1*a3
#creating a matrix
(mat1 <- a1[,,2]);
(a1 <- array(data = NA, dim = c(3,4,2)))
?array
(a1 <- array(data = NA, dim = c(3,4,2)))
#the default dim of a array is 1x26, cuz 26 letters
?as.array
dim (as.array(letters))
?dim
dim(a1)
class(letters)
is.array(letters);
is.array(s);
is.integer(letters);
a1[2,, ];
?factor
(x <- factor(c("East","fafa","afef","fafa","3wfawfa","west,"East")))
(x <- factor(c("East","fafa","afef","fafa","3wfawfa","west,"East")))
(x <- factor(c("East","fafa","afef","fafa","fawfa","west,"East")))
(x <- factor(c("East","fafa","afef","fafa","fawfa","west)))
(x <- factor(c("East","fafa","afef","fafa","fawfa","west")))
(x <- factor(c("East","fafa","afef","fafa","fawfa","west")))
(x <- c("East","fafa","afef","fafa","fawfa","west"))
(x <- factor(c("East","fafa","afef","fafa","fawfa","west")))
class(x)
(x1 <- factor(c("East","fafa","afef","fafa","fawfa","west")))
(x <- c("East","fafa","afef","fafa","fawfa","west"))
class(x1)
class(x)
str(x)
str(x1)
x["south"]
x[7] <- "place"
x1[7] <- "place"
x
x
#NA error occours
x1[7] <- "place"
x
x[7] <- "place"
x
#NA error occours
x1[10] <- "place"
x1
levels(x1) <- c(levels(x1),"place")
x1
x1
#NA error occours
x1[10] <- "place"
x1
levels(x1) <- c(levels(x1),"place")
levels(x1) <- c(levels(x1),"abbea")
x1
levels(x1) <- c(levels(x1),"place")
x1
x[7] <- "place"
x
levels(x1) <- c(levels(x1),"East")
x1
levels(x1)
x1
(x1 <- factor(c("East","fafa","afef","fafa","fawfa","west")))
x1
#repeated once wont print in level
levels(x1) <- c(levels(x1),"East")
levels(x1) <- c(levels(x1),"place")
levels(x1) <- c(levels(x1),"abbea")
x1
# data frame to store call center data
call_center_data <- data.frame(CallerPhoneNumber = c(9041, 9888, 9646, 7777, 8899),
CallerName = c("ANIKET", "MANISHA", "RAMAN", "RAJNIKANT", NA),
CallerLocation = c("Delhi", "Chandigarh", "Delhi", "AP", NA),
CallDuration = c(9, 15, 30, 0.333, NA))
print(call_center_data)
call_center_data$ProblemPriority <- factor(c("NORMAL", "MODERATE", "CRITICAL", NA, NA),
levels = c("CRITICAL", "NORMAL", "MODERATE"))
# Display the updated data
print(call_center_data)
callcenterdataProblemPriority <- factor(c("NORMAL", "MODERATE", "CRITICAL", NA, NA),
levels = c("CRITICAL", "NORMAL", "MODERATE"))
# Display the updated data
print(callcenterdata)
# data frame to store call center data
callcenterdata <- data.frame(CallerPhoneNumber = c(9041, 9888, 9646, 7777, 8899),
CallerName = c("ANIKET", "MANISHA", "RAMAN", "RAJNIKANT", NA),
CallerLocation = c("Delhi", "Chandigarh", "Delhi", "AP", NA),
CallDuration = c(9, 15, 30, 0.333, NA))
print(callcenterdata)
callcenterdataProblemPriority <- factor(c("NORMAL", "MODERATE", "CRITICAL", NA, NA),
levels = c("CRITICAL", "NORMAL", "MODERATE"))
# Display the updated data
print(callcenterdata)
#task 3:
callcenterdataCallerName[3] <- "DAMAN"
print(callcenterdata)
#task 3:
callcenterdata(CallerName[3]) <- "DAMAN"
#task 3:
callcenterdata.CallerName[3] <- "DAMAN"
Call_center
Call_center <- data.frame("Caller Phone Number" =c(9041,9888,9646,7777,8899),
"Caller Name" = c("Aniket","Manisha","Raman","Ranjini",NA),
"Caller Location" = c("Delhi","Chandigarh","Delhi","AP",NA),
"Call Duration" = c(9,15,30,0.33,0))
Call_center
View(alphabet_matrix)
View(alphabet_matrix)
Call_center <- cbind(Call_center,'Gender' = c("M","F","M","M",NA),
'Problem Priority' = c("Critical","Normal","Moderate","Normal","Normal"))
Call_center
Call_center <- data.frame("Caller Phone Number" =c(9041,9888,9646,7777,8899),
"Caller Name" = c("Aniket","Manisha","Raman","Ranjini",NA),
"Caller Location" = c("Delhi","Chandigarh","Delhi","AP",NA),
"Call Duration" = c(9,15,30,20/60,0))
Call_center <- cbind(Call_center,'Gender' = c("M","F","M","M",NA),
'Problem Priority' = c("Critical","Normal","Moderate","Normal","Normal"))
Call_center
Call_center$Caller.Name[3] <- "Daman"
rowname(Call_center) <- c("Caller1","Caller2","Caller3","Caller4","Caller5")
Call_center$Caller.Name[3] <- "Daman"
rownames(Call_center) <- c("Caller1","Caller2","Caller3","Caller4","Caller5")
Call_center
View(Call_center)
Vector1 <- c(15,19,12)
Vector2 <- c(16,17,18,20,21)
vec <- array(c(Vector1, Vector2), dim = (3,3))
vec <- array(c(Vector1, Vector2), dim = (3,3,2))
PATIENTBIODATA <- data.frame("Patient Name", "Patient ID", "Patient Gender",
"Patient Age", "Patient Job", "Patient Job hours")
PATIENTMEDICALHISTORY <- ("Patient ID", "Blood Group", "Blood Sugar Level",
PATIENTMEDICALHISTORY <- data.frame("Patient ID", "Blood Group", "Blood Sugar Level",
"Blood Pressure", "HeartBeat", "ESI"," RBC Count", "WBC Count")
PATIENTBIODATA
PATIENTBIODATA <- data.frame(`Patient Name`, "Patient ID", "Patient Gender",
"Patient Age", "Patient Job", "Patient Job hours")
PATIENTBIODATA <- data.frame(`Patient Name`, `Patient ID`, `Patient Gender`,
`Patient Age`, `Patient Job`, `Patient Job hours`)
"PATIENTBIODATA" <- data.frame(`Patient Name`, `Patient ID`, `Patient Gender`,
`Patient Age`, `Patient Job`, `Patient Job hours`)
"Patient ID" <- c("P101","P105")
"Patient Name" <- c("Anvit","Bhargavi")
"Patient Gender" <- c("M","F")
"Patient Age" <- c(35,45)
"PATIENT BIODATA" <- data.frame(`Patient Name`, `Patient ID`, `Patient Gender`,
`Patient Age`, `Patient Job`, `Patient Job hours`)
"PATIENT BIODATA" <- data.frame(c(`Patient Name`, `Patient ID`, `Patient Gender`,
`Patient Age`, `Patient Job`, `Patient Job hours`))
Function_name <- function(arguments)[body]
q1 = function(a=6, b=0){
print(a)
print(paste("b is :", b))
z = a+b
print(z)
}
#function calling
q1()
q1(b = 10)
q1(5, 20)
q2 = function(a=7, b=0){
print(a)
z = a-b
print(z)
}
q2()
#this is dynamic programming
addSum <- function(x,...){
args <- list(...)
#for loop runs untill ... times
for(a in args)
x <- x + a
}
print(x)
#this is dynamic programming
addSum <- function(x,...){
args <- list(...)
#for loop runs untill ... times
for(a in args)
x <- x + a
}
2 4 6
#this is dynamic programming
addSum <- function(x,...){
args <- list(...)
#for loop runs untill ... times
for(a in args) x <- x + a
print(x)
}
addSum(23, 12, 56)
?help
st <- read.csv("C:\Users\Hemant\OneDrive\Desktop\B.tech\FOURTH SEM\Data management\STATES.csv")
st <- read.csv("C:\\Users\\Hemant\\OneDrive\\Desktop\\B.tech\\FOURTH SEM\\Data management\\STATES.csv")
view(st)
View(st)
getwd()
st1 <- read.csv("STATES.csv")
st1 <- read.csv("STATES.csv")
getwd()
st1 <- read.csv("STATES.csv")
View(st)
st1
st1 <- read.csv("STATES.csv")
st1
setwd("C:\Users\Hemant\OneDrive\Desktop\B.tech\FOURTH SEM\R")
setwd("C:\\Users\\Hemant\\OneDrive\\Desktop\\B.tech\\FOURTH SEM\\R")
st <- read.csv("C:\\Users\\Hemant\\OneDrive\\Desktop\\B.tech\\FOURTH SEM\\Data management\\STATES.csv")
getwd()
st1 <- read.csv("STATES.csv")
setwd("C:\\Users\\Hemant\\OneDrive\\Desktop\\B.tech\\FOURTH SEM\\R")
st1
View(st)
st1 <- read.csv("STATES.csv")
View(st1)
st2 <- read.csv("C:\\Users\\Hemant\\OneDrive\\Desktop\\B.tech\\FOURTH SEM\\R\\matrices.r")
st2 <- read.csv("matrices.r")
View(st2)
st <- read.csv("C:\\Users\\Hemant\\OneDrive\\Desktop\\B.tech\\FOURTH SEM\\Data management\\STATES.csv")
st2 <- read.csv("matrices.r")
View(st)
#file choosing:
file.choose()
#file choosing:
tes <- read.csv(file.choose())
#file choosing:
tes <- read.csv(file.choose())
tes
View(tes)
#file choosing:
tes <- read.csv(file.choose())
View(tes)
is.na(st)
getwd()
str(st)
st[!complete.cases(st),]
View(st[!complete.cases(st),])
View(is.na(st))
View(st[complete.cases(st),])
View(st[!complete.cases(st),])
typeof(st)
class(st)
?complete.cases
st(c(7,15,23,26))
st[c(7,15,23,26)]
st[c(7,15,23,26),]
View(st[!complete.cases(st)])
,
View(st[!complete.cases(st),])
View(st)
?replace
st1 <- st
View(st1)
View(is.na(st1))
nrow(s1)
nrow(st1)
nrow(st1[!complete.cases(st1),])
nrow(st1[complete.cases(st1),])
nrow(st1[!complete.cases(st1),])
st1 = na.omit(st1)
nrow(st1[!complete.cases(st1),])
nrow(st1)
